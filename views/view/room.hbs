
<!--FilePond-->
<link href="https://unpkg.com/filepond/dist/filepond.css" rel="stylesheet">
<script src="https://unpkg.com/filepond/dist/filepond.js"></script>
<script src="https://unpkg.com/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.js"></script>
<script src="https://unpkg.com/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js"></script>


<link href="https://nielsboogaard.github.io/filepond-plugin-image-overlay/dist/filepond-plugin-image-overlay.css" rel="stylesheet">
<script src="https://nielsboogaard.github.io/filepond-plugin-image-overlay/dist/filepond-plugin-image-overlay.js"></script>
<script src="/filepond/filepond-plugin-get-file.js"></script>
<link href="/filepond/filepond-plugin-get-file.css" rel="stylesheet">

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

<link rel="stylesheet" href="/css/room.css">

<div class="card" style="margin-top: 10px">
    <h3> Code: <span id="code">{{code}}</span></h3>
</div>

<div class = "card" style="text-align: center">

<!--    <data-max-file-size="3MB">-->
<!--    <form action="/upload?num={{code}}" method="post"   encType="multipart/form-data">-->
        <div style="  margin: 4em auto 0; width: 60%;">
            <input type="file"
                   class="filepond"
                   name="item"
                   id="item"
                   multiple
                   data-allow-reorder="true">
        </div>

        <div style="float: left">
            <span>Expire</span>
            <select class="custom-select" id="inputGroupSelect02" name="expire">
                <option selected value="0">1 hour</option>
                <option value="1">3 hours</option>
                <option value="2">1 day</option>
                <option value="3">3 days</option>
            </select>
        </div>

<!--        <button type="submit" class="btn btn-secondary">Upload</button>-->
<!--    </form>-->

</div>




<div class="card" style="margin-top: 30px">

    <div style="width: 90%; text-align: center">
        <div class="results" style="margin-top: 30px; font-size: large; display: grid">

{{#each data}}
                <div style="width: 90%">
                        <div class="tooltip">
                            <a  href="/download/{{this.id}}" download> <img src="/img/doc.png" style="width: 80%"> </a>
                            <span class="tooltiptext">
                                Upload time: <span class="date"> {{this.date}}</span> <br>
                                Size:  <span> {{this.size}}</span>
                            </span>
                        </div>
                    <p> <a  href="/download/{{this.id}}" download> {{this.name}} </a></p>
                    <button type="button" class="btn btn-outline-danger" onclick="onDelete('{{this.id}}')">Delete</button>
                </div>

    {{/each}}

        </div>
    </div>

</div>


<script>
    FilePond.registerPlugin(
            // encodes the file as base64 data
            FilePondPluginFileEncode,
            // validates the size of the file
            FilePondPluginFileValidateSize,
            FilePondPluginGetFile,
            FilePondPluginImageOverlay
    );

    FilePond.setOptions({
        server: {
            url: '/api',
            process: {
                url: '/',
                method: 'POST',
                withCredentials: false,
                headers: {},
                onload: null,
                onerror: null
            }
        }
    });

    var pond = FilePond.create(
         document.querySelector('#item')
    );

    pond.on('processfile', (error, file) => {
        if (error) {
            console.log(error);
            return;
        }
        console.log('File processed', file);
    });



</script>

<script>

    let text =$('.date').text();
    $('.date').text(getDate(text).toString());


    function getDate(date) {
        let arr = date.split(" ");
        console.log(arr);
        let res = "" + arr[1] + " " + arr[2] + ", " + arr[3] + " " + arr[4];
        return res;
    }



    function onDelete(id){
        let request = new XMLHttpRequest();
        function success(text) {
            location.reload();
        }

        if(request!=null){
            request.onreadystatechange = function() {
                if(request.readyState==4&&request.status==200){
                    var text=request.responseText;
                    success(text);
                }
            };
        }

        request.open('DELETE', '/download', true);
        var  obj={
            id:id,
            code: {{code}}
        };
        request.send(JSON.stringify(obj));

    }



</script>
